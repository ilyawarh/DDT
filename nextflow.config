// nextflow.config: Configuration for metagenomics pipeline

manifest {
    name = 'Metagenomics Pipeline'
    author = 'Your Name'
    description = 'A comprehensive Nextflow pipeline for metagenomic analysis'
    version = '1.0.0'
    nextflowVersion = '>=22.10.0'
}

// Default parameters
params {
    // Input data
    input_ont = null         // Path to Nanopore FASTQ directory
    input_fast5 = null      // Path to Nanopore raw .fast5 directory
    short_1 = null          // Path to Illumina R1 FASTQ directory
    short_2 = null          // Path to Illumina R2 FASTQ directory
    databases = null        // Path to folder with all databases

    // Resource allocation
    cpus = 12              // Default total CPUs if not specified
    memory = '34GB'        // Default total memory if not specified

    // Output directories
    outdir = 'results'
    reports = 'reports'
    raw_data = 'raw_data'

    // Dorado parameters
    dorado_model = 'dna_r10.4.1_e8.2_400bps_sup@v4.2.0'  // Default model for R10.4.1 kit
    demultiplex = false     // Enable demultiplexing
    barcode_kit = null      // Barcode kit (e.g., 'SQK-NBD114-24')
    detect_modifications = false  // Enable modified base detection
    modification_model = null     // Model for modification detection (e.g., '5mC@v2')
    duplex = false          // Enable duplex sequencing processing
    dorado_opts = ''        // Additional Dorado options

    // Tool-specific parameters
    porechop_opts = ''
    nanofilt_opts = ''
    fastp_opts = ''
    fmlrc2_opts = ''
    krakenuniq_opts = ''
    kaiju_opts = ''
    centrifuge_opts = ''
    diamond_opts = ''
    megan_opts = ''
    flye_opts = ''
    raven_opts = ''
    unicycler_opts = ''
    minimap2_opts = ''
    racon_opts = ''
    medaka_opts = ''
    pilon_opts = ''
    homopolish_opts = ''
    quast_opts = ''
    semibin_opts = ''
    metabinner_opts = ''
    comebin_opts = ''
    metawrap_opts = ''
    gtdbtk_opts = ''
    abricate_opts = ''
    prokka_opts = ''
    genomad_opts = ''
    taxpasta_opts = ''
    checkm2_opts = ''
    coverm_opts = ''
    merqury_opts = ''
    reapr_opts = ''

    // Feature flags
    help = false
    hybrid = false
    read_expand = false
    poly_binning = false
    annotate_more = false
}

// Process resource configurations
process {
    // Default configuration - use all specified resources
    cpus = params.cpus
    memory = params.memory
    
    // Resource labels for specific needs
    withLabel: small_mem {
        cpus = { Math.min(4, params.cpus as int) }
        memory = { 
            def requestedGB = (params.memory as String).replaceAll(/[^0-9]/, '') as int
            "${Math.min(8, requestedGB)}GB"
        }
    }
    
    withLabel: large_mem {
        cpus = params.cpus  // Use all available CPUs
        memory = params.memory  // Use all available memory
    }

    // Container configurations - only required ones
    withName: 'METABINNER|COMEBIN' {
        container = 'quay.io/biocontainers/metabinner:1.4.4--hdfd78af_0'
    }
    
    withName: MEGAN_LR {
        container = 'quay.io/biocontainers/megan:6.21.7--hdfd78af_0'
    }
}

// Profiles
profiles {
    standard {
        process.executor = 'local'
    }
    
    slurm {
        process.executor = 'slurm'
        process.clusterOptions = { 
            "--nodes=1 --ntasks=${params.cpus} --mem=${params.memory}"
        }
    }
    
    docker {
        docker.enabled = true
        docker.userEmulation = true
    }
    
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
    }
    
    conda {
        conda.enabled = true
    }
} 